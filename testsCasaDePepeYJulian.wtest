import cosas.*
import casa.*

describe "Tests casa de Pepe y Julian" {

    method initialize() {
        casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)
    }
  
    test "En la lista figura que se compro una heladera, una cama y una plancha para la casa" {
        assert.equals([heladera, cama, plancha], casaDePepeYJulian.cosas())
    }

    test "La cantidad de cosas compradas son 3 " {
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */   
        assert.equals(3, casaDePepeYJulian.cantidadDeCosasCompradas())
    }

    test "Entre las cosas compradas tiene algún electrodoméstico y algun mueble pero no comida" {
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */  
        assert.that(casaDePepeYJulian.tieneAlgun(electrodomestico))
        assert.that(casaDePepeYJulian.tieneAlgun(mueble))
        assert.notThat(casaDePepeYJulian.tieneAlgun(comida))
    }

    test "Si le preguntan si viene de comprar un electrodoméstico dice que sí, y si viene de comprar un mueble dice que no" {
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */       
        assert.that(casaDePepeYJulian.vieneDeComprar(electrodomestico))
        assert.notThat(casaDePepeYJulian.vieneDeComprar(mueble))
    }
        
    test "Es derrochona (ya que gastó 29200)" {
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */       
        assert.that(casaDePepeYJulian.esDerrochona())
    }

    test "Los electrodomesticos que compraron son la heladera y la plancha" {
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */       
        assert.equals([heladera, plancha], casaDePepeYJulian.comprados(electrodomestico))
    }
    test "Los muebles comprados son la cama y nada más"{
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */  
        assert.equals([cama], casaDePepeYJulian.comprados(mueble))
    }

    test "No hay comida comprada"{
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */       
        assert.equals([], casaDePepeYJulian.comprados(comida))
    }
    
    test " No es una mala época"{
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */  
        assert.notThat(casaDePepeYJulian.malaEpoca())
    }

    test "Falta comprar de una tira de asado, una plancha y un paquete de fideos debe contestar que falta la tira de asado y el paquete de fideos"{
        assert.equals([tiraDeAsado, paqueteDeFideos], casaDePepeYJulian.queFaltaComprar([tiraDeAsado, plancha, paqueteDeFideos]))
    }

    test "Falta comida"{
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */  
        assert.that(casaDePepeYJulian.faltaComida())
    }

    test "Las categorías compradas son electrodoméstico y mueble"{
/*      casaDePepeYJulian.cuentaAsignada().saldo(29200)
        casaDePepeYJulian.comprar(heladera)
        casaDePepeYJulian.comprar(cama)
        casaDePepeYJulian.comprar(plancha)  */  
        assert.equals([electrodomestico, mueble], casaDePepeYJulian.categoriasCompradas())
    }
}

// Profe, no logre poder hacer correr los test en esta compu. A veces no me anda el Ejecutar y otras me la tilda toda.
// Cuando este con la mia los voy a correr







